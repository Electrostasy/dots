# Prusa MK3S+ Klipper configuration with E3D Revo, hacked together from:
# https://github.com/dz0ny/klipper-prusa-mk3s
# https://github.com/Klipper3d/klipper/pull/4080/

[temperature_sensor einsy_board]
sensor_pin: PF6
sensor_type: TDK NTCG104LH104JT1
min_temp: -10
max_temp: 70

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[probe]
pin: PB4
x_offset: 23
y_offset: 5
z_offset: 1.590
speed: 20.0
samples: 3
samples_result: average
sample_retract_dist: 1.0

[gcode_arcs]
resolution: 0.25

[bed_screws]
screw1: 13,6
screw1_name: Front Left
screw2: 13,115
screw1_name: Front Center
screw3: 13,210
screw3_name: Front Right

screw4: 123,6
screw1_name: Center Left
screw5: 123,210
screw3_name: Center Right

screw6: 228,6
screw3_name: Back Left
screw7: 228,115
screw1_name: Back Center
screw8: 228,210
screw3_name: Back Right

[bed_mesh]
algorithm: bicubic
fade_end: 10
faulty_region_1_min: 100.583, 187.376
faulty_region_1_max: 122.083, 229.376
faulty_region_2_min: 125.672, -18.124
faulty_region_2_max: 147.172, 23.876
faulty_region_3_min: 192.261, 5.126
faulty_region_3_max: 234.261, 26.626
faulty_region_4_min: 114.422, 39.876
faulty_region_4_max: 135.922, 81.876
faulty_region_5_min: 21.422, 87.126
faulty_region_5_max: 42.922, 129.126
faulty_region_6_min: 54.172, 97.376
faulty_region_6_max: 96.172, 118.876
faulty_region_7_min: 154.172, 97.376
faulty_region_7_max: 196.172, 118.876
faulty_region_8_min: 205.136, 87.126
faulty_region_8_max: 226.636, 129.126
faulty_region_9_min: 114.422, 134.376
faulty_region_9_max: 135.922, 176.376
faulty_region_10_min: 176.177, 191.394
faulty_region_10_max: 218.177, 212.894
horizontal_move_z: 2
mesh_max: 228,210
mesh_min: 24,6
mesh_pps: 3
probe_count: 3,3
speed: 200
# relative_reference_index: 25 #Generate mesh relative to center post for nylock.
# mesh_pps: 0,0 #Don't generate interperlated points so our mesh is compatible with nylock calculators like https://pcboy.github.io/g81_relative/

#Home in lower, lefthand corner.
[homing_override]
gcode:
  G1 Z3
  G28 X0 Y200
  G1 X1 Y0 F5000
  G28 Z0
axes: Z
set_position_x: 0
set_position_y: 0
set_position_z: 0

[gcode_macro G80]
gcode:
# G28 #Avoid double homing if using PrusaSlicer or other default gcode.
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z0.4 F4000

[gcode_macro G81]
gcode:
  BED_MESH_OUTPUT

[stepper_x]
step_pin: PC0
dir_pin: !PL0
enable_pin: !PA7
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
# step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
microsteps: 16
rotation_distance: 32
endstop_pin: tmc2130_stepper_x:virtual_endstop
position_endstop: 0
position_max: 255
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_x]
cs_pin: PG0
interpolate: True
stealthchop_threshold: 0
run_current: .281738
hold_current: .281738
sense_resistor: 0.220
diag1_pin: !PK2
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_y]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
# step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
microsteps: 16
rotation_distance: 32
endstop_pin: tmc2130_stepper_y:virtual_endstop
position_endstop: -4
position_max: 212.5
position_min: -4
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_y]
cs_pin: PG2
interpolate: True
stealthchop_threshold: 0
run_current: .281738
hold_current: .281738
#Run at the same current as X-axis for lower noise, and to keep steppers cooler.
#This should work, but if Y starts skipping steps, you may need to bump up to Prusa stock.
#run_current: .3480291
#hold_current: .3480291
sense_resistor: 0.220
diag1_pin: !PK7
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_z]
step_pin: PC2
dir_pin: !PL2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
# step_distance: .0025
endstop_pin: probe:z_virtual_endstop
#Please update the Z height in the Tram_Z macro below.
position_max: 200 #This is the MK3S default.
# position_max: 210 #Use this for a stock MK3 non-S, BMG, or Bear extruders for the MK3S.
position_min: -2
homing_speed: 13.333

[tmc2130 stepper_z]
cs_pin: PK5
run_current: .53033
hold_current: .53033
sense_resistor: 0.220
diag1_pin: !PK6
interpolate: True
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 200
driver_PWM_AUTOSCALE: True
driver_SGT: 4

[extruder]
step_pin: PC3
dir_pin: PL6
enable_pin: !PA4
microsteps: 16
# step_distance: .0035714 #Stock Prusa or Bear extruder.
full_steps_per_rotation: 200
rotation_distance: 22.85696
nozzle_diameter: 0.400
filament_diameter: 1.750
# The max extrude cross section is increased for the purge line, but in theory
# its probably a bad idea to have it this large, as its purpose is to catch
# poorly sliced objects that extrude too much for small moves.
max_extrude_cross_section: 50.0
# Allows to load filament and purge up to 500mm
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1250.0
heater_pin: PE5
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF0
pressure_advance: 0.05
pressure_advance_smooth_time: 0.040
control: pid
pid_Kp: 26.115
pid_Ki: 3.704
pid_Kd: 46.027
min_temp: 0
min_extrude_temp: 170
max_temp: 300

[tmc2130 extruder]
cs_pin: PK4
interpolate: True
run_current: .513757
hold_current: .513757
sense_resistor: 0.220
diag1_pin: !PK3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 240
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
control: pid
pid_Kp: 55.399
pid_Ki: 0.916
pid_Kd: 837.215
min_temp: 0
max_temp: 125

[heater_fan nozzle_cooling_fan]
pin: PH5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

# Part Cooling Fan
[fan]
pin: PH3

[mcu]
# TODO: udev rule to rename the /dev/serial/by-id/ devfs node.
serial: /dev/ttyACM0

# [mcu adxl]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E6611032E37D2734-if00

# [adxl345]
# cs_pin: adxl:gpio1
# spi_bus:spi0a

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     100, 100, 20

[input_shaper]
shaper_freq_x: 55.8
shaper_type_x: 2hump_ei
shaper_freq_y: 43.6
shaper_type_y: mzv

[display]
lcd_type: hd44780
rs_pin: PD5
e_pin: PF7
d4_pin: PF5
d5_pin: PG4
d6_pin: PH7
d7_pin: PG3
encoder_pins: ^PJ1,^PJ2
click_pin: ^!PH6

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 7000
max_z_velocity: 10
max_z_accel: 200

[filament_switch_sensor fsensor]
pause_on_runout: True
runout_gcode:
  M118 Filament Runout Detected
  M600
insert_gcode:
  M118 Filament Load Detected
  LOAD_FILAMENT
event_delay: 3.0
pause_delay: 0.01
switch_pin: !PK0

[respond]
default_type: command

[pause_resume]

# Keeps Debug LED off / not floating
[static_digital_output debug_led]
pins: !PB7

[output_pin BEEPER_pin]
pin: PH2
pwm: True
value: 0
shutdown_value:0
cycle_time: 0.001
scale: 1000

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[display_status]

[force_move]
enable_force_move: TRUE

[gcode_macro M486]
gcode:
  CLEAR_PAUSE

[gcode_macro G80]
gcode:
  M117 Bed leveling
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z0.4 F4000
  M117
  M400

[gcode_macro G81]
gcode:
  BED_MESH_OUTPUT

[gcode_macro M300]
gcode:
  # Use a default 1kHz tone if S is omitted.
  {% set S = params.S|default(1000)|int %}
  # Use a 10ms duration is P is omitted.
  {% set P = params.P|default(100)|int %}
  SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  G4 P{P}
  SET_PIN PIN=BEEPER_pin VALUE=0
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E-45 F5000
  G1 E-15 F1000
  G1 E-20 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  M300 S300 P1000
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SDCARD_RESET_FILE
  # Raise nozzle by 60mm
  G1 Z60 F3000
  G90
  # Disable steppers
  M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  CLEAR_PAUSE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro Calibrate_Z]
description: Calibrate Z axis
gcode:
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 X20 Y0
  G1 Z{max_z-10} F2000 #Update with Z height.
  FORCE_MOVE STEPPER=stepper_z Distance=20 Velocity=10
  G1 Z{max_z-50} F2000 # Move down
  G28 # Home again

[gcode_macro M600]
description: Color change
gcode:
  {% set X = params.X|default(0)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state

[virtual_sdcard]
path: /var/lib/moonraker/gcodes
