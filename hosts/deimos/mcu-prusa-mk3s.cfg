# Original Prusa MK3S+ 3D printer Klipper firmware configuration with mods:
# - E3D Revo Six (60W) hotend
# - E3D Hemera XS extruder
#
# Based off of and inspired by the following configurations:
# https://github.com/dz0ny/klipper-prusa-mk3s
# https://github.com/Klipper3d/klipper/pull/4080/

[temperature_sensor einsy_board]
sensor_pin: PF6
sensor_type: TDK NTCG104LH104JT1
min_temp: -10
max_temp: 70

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[probe]
pin: PB4
x_offset: 36
y_offset: 18
z_offset: 1.841
speed: 20.0
samples: 3
samples_result: average
sample_retract_dist: 1.0

[safe_z_home]
home_xy_position: 91,87
speed: 50.0
z_hop: 15
z_hop_speed: 15.0
move_to_previous: False

[gcode_arcs]
resolution: 0.1

[bed_mesh]
algorithm: bicubic
fade_end: 10
# See `./process_faulty_regions.fish`, some of these are likely redundant.
# TODO These need to be redone/combined, needs a much higher margin
faulty_region_1_min: -7.566248, -33.868562
faulty_region_1_max: 21.725418, -25.076896
faulty_region_2_min: 24.933750, -33.868562
faulty_region_2_max: 54.225423, -25.076896
faulty_region_3_min: 126.110955, -33.868562
faulty_region_3_max: 155.402613, -25.076896
faulty_region_4_min: 158.610955, -33.868562
faulty_region_4_max: 187.902613, -25.076896
faulty_region_5_min: 204.772353, 9.934778
faulty_region_5_max: 213.564023, 39.226444
faulty_region_6_min: 204.489303, 43.615330
faulty_region_6_max: 213.280973, 72.906998
faulty_region_7_min: 204.489303, 104.479636
faulty_region_7_max: 213.280973, 133.771304
faulty_region_8_min: 204.772353, 135.253495
faulty_region_8_max: 213.564023, 164.545153
faulty_region_9_min: 183.581908, 197.416004
faulty_region_9_max: 212.873566, 206.207674
faulty_region_10_min: 122.014063, 196.557532
faulty_region_10_max: 151.305722, 205.349183
faulty_region_11_min: 28.030640, 196.557532
faulty_region_11_max: 57.322308, 205.349183
faulty_region_12_min: -34.710113, 197.631443
faulty_region_12_max: -5.418447, 206.423113
faulty_region_13_min: -34.952275, 167.822181
faulty_region_13_max: -26.160609, 197.113858
faulty_region_14_min: -33.477651, 137.125380
faulty_region_14_max: -24.685985, 166.417039
faulty_region_15_min: -32.944610, 104.699987
faulty_region_15_max: -24.152944, 133.991261
faulty_region_16_min: -33.944610, 43.206029
faulty_region_16_max: -25.152944, 72.497697
faulty_region_17_min: -34.227651, 13.881439
faulty_region_17_max: -25.435985, 43.173102
faulty_region_18_min: -33.477650, -16.618562
faulty_region_18_max: -24.685988, 12.673104
faulty_region_19_min: 116.510538, -30.118562
faulty_region_19_max: 105.814019, -0.826897
faulty_region_20_min: 163.610955, -6.868563
faulty_region_20_max: 192.902613, 1.923104
faulty_region_21_min: 176.486873, 75.131434
faulty_region_21_max: 185.278543, 104.423102
faulty_region_22_min: 147.527009, 179.399291
faulty_region_22_max: 176.818667, 188.190941
faulty_region_23_min: 71.933218, 175.381447
faulty_region_23_max: 80.724888, 204.673106
faulty_region_24_min: -7.227652, 75.131434
faulty_region_24_max: 1.564016, 104.423102
faulty_region_25_min: 85.772349, 27.883406
faulty_region_25_max: 94.564019, 57.173106
faulty_region_26_min: 125.522345, 85.381438
faulty_region_26_max: 154.814023, 94.173108
faulty_region_27_min: 85.772349, 122.381440
faulty_region_27_max: 94.564019, 151.673098
faulty_region_28_min: 25.522350, 85.381438
faulty_region_28_max: 54.814013, 94.173108
zero_reference_position: 91.0, 85.7
horizontal_move_z: 15
mesh_max: 244, 210
mesh_min: 24.5, 3.375
mesh_pps: 3
probe_count: 3, 3
speed: 200

[stepper_x]
step_pin: PC0
dir_pin: !PL0
enable_pin: !PA7
microsteps: 16
rotation_distance: 32
position_max: 244
position_min: -11.5
position_endstop: -11.5
endstop_pin: tmc2130_stepper_x:virtual_endstop
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_x]
cs_pin: PG0
interpolate: True
stealthchop_threshold: 0
run_current: .281738
hold_current: .281738
sense_resistor: 0.220
diag1_pin: !PK2
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_y]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
microsteps: 16
rotation_distance: 32
position_max: 204
position_min: -14.625
position_endstop: -14.625
endstop_pin: tmc2130_stepper_y:virtual_endstop
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_y]
cs_pin: PG2
interpolate: True
stealthchop_threshold: 0
run_current: .281738
hold_current: .281738
#Run at the same current as X-axis for lower noise, and to keep steppers cooler.
#This should work, but if Y starts skipping steps, you may need to bump up to Prusa stock.
#run_current: .3480291
#hold_current: .3480291
sense_resistor: 0.220
diag1_pin: !PK7
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_z]
step_pin: PC2
dir_pin: !PL2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 210
position_min: -2
homing_speed: 13.333

[tmc2130 stepper_z]
cs_pin: PK5
run_current: .53033
hold_current: .53033
sense_resistor: 0.220
diag1_pin: !PK6
interpolate: True
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 200
driver_PWM_AUTOSCALE: True
driver_SGT: 4

[extruder]
step_pin: PC3
dir_pin: PL6
enable_pin: !PA4
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
rotation_distance: 8.060453
filament_diameter: 1.750
max_extrude_cross_section: 50.0
max_extrude_only_distance: 101.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1250.0
heater_pin: PE5
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF0
pressure_advance: 0.05
pressure_advance_smooth_time: 0.010
control: pid
pid_Kp: 29.003
pid_Ki: 3.648
pid_Kd: 57.643
min_temp: 0
min_extrude_temp: 170
max_temp: 300

[firmware_retraction]
retract_length: 0.4
retract_speed: 55

[tmc2130 extruder]
cs_pin: PK4
interpolate: True
# Hemera XS datasheet recommends 1.4A peak ~0.99 RMS current.
# https://e3d-online.zendesk.com/hc/en-us/articles/5911118647709-Revo-Hemera-XS-Datasheet
# https://www.klipper3d.org/TMC_Drivers.html
# 1.4A * 0.707 * 0.85 (safety margin) = 0.84133
# 0.99 * 0.85 (safety margin) = 0.8415
run_current: 0.84133
sense_resistor: 0.220
diag1_pin: !PK3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 240
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
control: pid
pid_Kp: 55.399
pid_Ki: 0.916
pid_Kd: 837.215
min_temp: 0
max_temp: 125

[heater_fan hotend_fan]
pin: PH5
tachometer_pin: PE6
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin: PH3
tachometer_pin: PE7
off_below: 0.13

[mcu]
serial: /dev/ttyMK3S

[mcu led_controller]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6611032E37D2734-if00

[neopixel enclosure]
pin: led_controller:gpio0
chain_count: 122
color_order: GRBW

[delayed_gcode enable_leds_at_startup]
initial_duration: 0.01
gcode:
  {% for i in range(1,122) %}
    # Clear all LEDs first.
    SET_LED LED=enclosure RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 TRANSMIT=0
    # Set current LED by index to white.
    SET_LED LED=enclosure RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.2 INDEX={i} TRANSMIT=1
  {% endfor %}
  # Set all LEDs to white.
  SET_LED LED=enclosure RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.2 TRANSMIT=1

# [mcu adxl_controller]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E6617C93E3579427-if00
#
# [adxl345 X]
# cs_pin: adxl_controller:gpio1
# spi_bus: spi0a
# axes_map: -x, y, z
#
# [adxl345 Y]
# cs_pin: adxl_controller:gpio9
# spi_bus: spi1a
#
# [resonance_tester]
# accel_chip_x: adxl345 X
# accel_chip_y: adxl345 Y
# probe_points:
#   127, 105, 20

[input_shaper]
# Suggested max accel: <= 12900
shaper_freq_x: 66.2
shaper_type_x: mzv
# Suggested max accel: <= 5500
shaper_freq_y: 43.4
shaper_type_y: mzv

[display]
lcd_type: hd44780
rs_pin: PD5
e_pin: PF7
d4_pin: PF5
d5_pin: PG4
d6_pin: PH7
d7_pin: PG3
encoder_pins: ^PJ1,^PJ2
click_pin: ^!PH6

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5500
max_z_velocity: 10
max_z_accel: 200

[respond]
default_type: command

[pause_resume]

[static_digital_output debug_led]
pins: !PB7

[output_pin BEEPER_pin]
pin: PH2
pwm: True
value: 0
shutdown_value:0
cycle_time: 0.001
scale: 1000

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[display_status]

[force_move]
enable_force_move: TRUE

[gcode_macro M486]
gcode:
  CLEAR_PAUSE

[gcode_macro G80]
gcode:
  M117 Bed leveling
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z0.4 F4000
  M117
  M400

[gcode_macro G81]
gcode:
  BED_MESH_OUTPUT

[gcode_macro M300]
gcode:
  # Use a default 1kHz tone if S is omitted.
  {% set S = params.S|default(1000)|int %}
  # Use a 10ms duration is P is omitted.
  {% set P = params.P|default(100)|int %}
  SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  G4 P{P}
  SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E-45 F5000
  G1 E-15 F1000
  G1 E-20 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  M300 S300 P1000
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SDCARD_RESET_FILE
  # Raise nozzle by 60mm
  G1 Z60 F3000
  G90
  # Disable steppers
  M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  CLEAR_PAUSE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro Calibrate_Z]
description: Calibrate Z axis
gcode:
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 X20 Y0
  G1 Z{max_z-10} F2000 #Update with Z height.
  FORCE_MOVE STEPPER=stepper_z Distance=20 Velocity=10
  G1 Z{max_z-50} F2000 # Move down
  G28 # Home again

[gcode_macro M600]
description: Color change
gcode:
  {% set X = params.X|default(0)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state

[virtual_sdcard]
path: /var/lib/moonraker/gcodes
